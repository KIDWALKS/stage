name: Deploy to Stage with Version Tag

on:
  push:
    tags:
      - 'v*'  # triggers on v1.0.0, v2.3.1 etc.

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:  # move here (inside jobs.build-and-deploy)
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REGISTRY: ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      CLIENT_IMAGE: inventoryapp-client-stage
      SERVER_IMAGE: inventoryapp-server-stage

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3

      - name: üè∑Ô∏è Set and export VERSION_TAG
        run: echo "VERSION_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #   aws-region: us-east-1
          aws-region: ${{ env.AWS_REGION }}

      - name: üîê Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: üê≥ Build and Push Docker Images with Version Tags
        run: |
          docker build -t $ECR_REGISTRY/$CLIENT_IMAGE:$VERSION_TAG -t $ECR_REGISTRY/$CLIENT_IMAGE:latest -f client/Dockerfile .
          docker build -t $ECR_REGISTRY/$SERVER_IMAGE:$VERSION_TAG -t $ECR_REGISTRY/$SERVER_IMAGE:latest -f server/Dockerfile .

          docker push $ECR_REGISTRY/$CLIENT_IMAGE:$VERSION_TAG
          docker push $ECR_REGISTRY/$CLIENT_IMAGE:latest

          docker push $ECR_REGISTRY/$SERVER_IMAGE:$VERSION_TAG
          docker push $ECR_REGISTRY/$SERVER_IMAGE:latest

      - name: üöÄ SSH to EC2 and Deploy Stage
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            export AWS_REGION=${{ env.AWS_REGION }}
            export ECR_REGISTRY=${{ env.ECR_REGISTRY }}
            export VERSION_TAG=${{ env.VERSION_TAG }}

            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

            docker pull $ECR_REGISTRY/$CLIENT_IMAGE:$VERSION_TAG
            docker pull $ECR_REGISTRY/$SERVER_IMAGE:$VERSION_TAG

            cd ~/kidwalksapparells-inventory

            docker stop client || true && docker rm client || true
            docker stop server || true && docker rm server || true

            docker run -d --name client -p 3100:3000 $ECR_REGISTRY/$CLIENT_IMAGE:$VERSION_TAG
            docker run -d --name server -p 3101:3001 $ECR_REGISTRY/$SERVER_IMAGE:$VERSION_TAG

            echo "‚úÖ Deployment complete for version $VERSION_TAG"
